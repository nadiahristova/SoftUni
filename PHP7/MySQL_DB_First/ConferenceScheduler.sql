-- MySQL Script generated by MySQL Workbench
-- 11/12/15 15:43:35
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema conference_scheduler
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema conference_scheduler
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `conference_scheduler` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `conference_scheduler` ;

-- -----------------------------------------------------
-- Table `conference_scheduler`.`genders`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `conference_scheduler`.`genders` ;

CREATE TABLE IF NOT EXISTS `conference_scheduler`.`genders` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `type` VARCHAR(10) NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `conference_scheduler`.`roles`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `conference_scheduler`.`roles` ;

CREATE TABLE IF NOT EXISTS `conference_scheduler`.`roles` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `role` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `conference_scheduler`.`countries`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `conference_scheduler`.`countries` ;

CREATE TABLE IF NOT EXISTS `conference_scheduler`.`countries` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `name` VARCHAR(45) NOT NULL COMMENT '',
  `iso_code` CHAR(7) NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  UNIQUE INDEX `name_UNIQUE` (`name` ASC)  COMMENT '',
  UNIQUE INDEX `iso_code_UNIQUE` (`iso_code` ASC)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `conference_scheduler`.`cities`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `conference_scheduler`.`cities` ;

CREATE TABLE IF NOT EXISTS `conference_scheduler`.`cities` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `name` VARCHAR(55) NOT NULL COMMENT '',
  `zip_code` VARCHAR(16) NULL COMMENT '',
  `country_id` INT NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  UNIQUE INDEX `name_UNIQUE` (`name` ASC)  COMMENT '',
  INDEX `fk_cities_countries1_idx` (`country_id` ASC)  COMMENT '',
  CONSTRAINT `fk_cities_countries1`
    FOREIGN KEY (`country_id`)
    REFERENCES `conference_scheduler`.`countries` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `conference_scheduler`.`address`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `conference_scheduler`.`address` ;

CREATE TABLE IF NOT EXISTS `conference_scheduler`.`address` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `city_id` INT NOT NULL COMMENT '',
  `country_id` INT NOT NULL COMMENT '',
  `Street` VARCHAR(45) NULL COMMENT '',
  `number` CHAR(10) NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `fk_Address_countries1_idx` (`country_id` ASC)  COMMENT '',
  INDEX `fk_Address_cities1_idx` (`city_id` ASC)  COMMENT '',
  CONSTRAINT `fk_Address_countries1`
    FOREIGN KEY (`country_id`)
    REFERENCES `conference_scheduler`.`countries` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Address_cities1`
    FOREIGN KEY (`city_id`)
    REFERENCES `conference_scheduler`.`cities` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `conference_scheduler`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `conference_scheduler`.`users` ;

CREATE TABLE IF NOT EXISTS `conference_scheduler`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `username` VARCHAR(45) NOT NULL COMMENT '',
  `password` VARCHAR(45) NOT NULL COMMENT '',
  `email` VARCHAR(45) NOT NULL COMMENT '',
  `first_name` VARCHAR(45) NULL COMMENT '',
  `last_name` VARCHAR(45) NOT NULL COMMENT '',
  `phone` VARCHAR(45) NULL COMMENT '',
  `profile_pic_url` VARCHAR(255) NULL DEFAULT 'https://www.dropbox.com/s/225jip7nvs2gwt6/images%20%283%29.jpg?raw=1' COMMENT '',
  `birth_date` DATETIME NOT NULL COMMENT '',
  `joined_at` DATETIME NOT NULL COMMENT '',
  `credit` DECIMAL(15,2) NOT NULL DEFAULT 500 COMMENT '',
  `gender_id` INT NOT NULL COMMENT '',
  `role_id` INT NOT NULL COMMENT '',
  `address_id` INT NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  UNIQUE INDEX `username_UNIQUE` (`username` ASC)  COMMENT '',
  UNIQUE INDEX `email_UNIQUE` (`email` ASC)  COMMENT '',
  INDEX `fk_users_genders_idx` (`gender_id` ASC)  COMMENT '',
  INDEX `fk_users_roles1_idx` (`role_id` ASC)  COMMENT '',
  INDEX `fk_users_Address1_idx` (`address_id` ASC)  COMMENT '',
  CONSTRAINT `fk_users_genders`
    FOREIGN KEY (`gender_id`)
    REFERENCES `conference_scheduler`.`genders` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_roles1`
    FOREIGN KEY (`role_id`)
    REFERENCES `conference_scheduler`.`roles` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_Address1`
    FOREIGN KEY (`address_id`)
    REFERENCES `conference_scheduler`.`address` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `conference_scheduler`.`groups`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `conference_scheduler`.`groups` ;

CREATE TABLE IF NOT EXISTS `conference_scheduler`.`groups` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `name` VARCHAR(45) NOT NULL COMMENT '',
  `address_id` INT NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  UNIQUE INDEX `name_UNIQUE` (`name` ASC)  COMMENT '',
  INDEX `fk_groups_Address1_idx` (`address_id` ASC)  COMMENT '',
  CONSTRAINT `fk_groups_Address1`
    FOREIGN KEY (`address_id`)
    REFERENCES `conference_scheduler`.`address` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `conference_scheduler`.`groups_has_users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `conference_scheduler`.`groups_has_users` ;

CREATE TABLE IF NOT EXISTS `conference_scheduler`.`groups_has_users` (
  `group_id` INT NOT NULL COMMENT '',
  `user_id` INT NOT NULL COMMENT '',
  PRIMARY KEY (`group_id`, `user_id`)  COMMENT '',
  INDEX `fk_groups_has_users_users1_idx` (`user_id` ASC)  COMMENT '',
  INDEX `fk_groups_has_users_groups1_idx` (`group_id` ASC)  COMMENT '',
  CONSTRAINT `fk_groups_has_users_groups1`
    FOREIGN KEY (`group_id`)
    REFERENCES `conference_scheduler`.`groups` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_groups_has_users_users1`
    FOREIGN KEY (`user_id`)
    REFERENCES `conference_scheduler`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `conference_scheduler`.`venues`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `conference_scheduler`.`venues` ;

CREATE TABLE IF NOT EXISTS `conference_scheduler`.`venues` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `name` VARCHAR(45) NULL COMMENT '',
  `address_id` INT NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `fk_venues_address1_idx` (`address_id` ASC)  COMMENT '',
  CONSTRAINT `fk_venues_address1`
    FOREIGN KEY (`address_id`)
    REFERENCES `conference_scheduler`.`address` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `conference_scheduler`.`conferences`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `conference_scheduler`.`conferences` ;

CREATE TABLE IF NOT EXISTS `conference_scheduler`.`conferences` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `venue_id` INT NOT NULL COMMENT '',
  `start_date` DATETIME NOT NULL COMMENT '',
  `end_date` DATETIME NOT NULL COMMENT '',
  `active` TINYINT(1) NOT NULL DEFAULT 1 COMMENT '',
  `group_id` INT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `fk_conferences_venues1_idx` (`venue_id` ASC)  COMMENT '',
  INDEX `fk_conferences_groups1_idx` (`group_id` ASC)  COMMENT '',
  CONSTRAINT `fk_conferences_venues1`
    FOREIGN KEY (`venue_id`)
    REFERENCES `conference_scheduler`.`venues` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_conferences_groups1`
    FOREIGN KEY (`group_id`)
    REFERENCES `conference_scheduler`.`groups` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `conference_scheduler`.`halls`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `conference_scheduler`.`halls` ;

CREATE TABLE IF NOT EXISTS `conference_scheduler`.`halls` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `name` VARCHAR(45) NULL COMMENT '',
  `number` CHAR(10) NOT NULL COMMENT '',
  `floor` INT NOT NULL DEFAULT 0 COMMENT '',
  `limit_guests` INT NOT NULL COMMENT '',
  `venue_id` INT NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `fk_halls_venues1_idx` (`venue_id` ASC)  COMMENT '',
  CONSTRAINT `fk_halls_venues1`
    FOREIGN KEY (`venue_id`)
    REFERENCES `conference_scheduler`.`venues` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `conference_scheduler`.`conferences_has_organisers`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `conference_scheduler`.`conferences_has_organisers` ;

CREATE TABLE IF NOT EXISTS `conference_scheduler`.`conferences_has_organisers` (
  `conference_id` INT NOT NULL COMMENT '',
  `user_id` INT NOT NULL COMMENT '',
  PRIMARY KEY (`conference_id`, `user_id`)  COMMENT '',
  INDEX `fk_conferences_has_users_users1_idx` (`user_id` ASC)  COMMENT '',
  INDEX `fk_conferences_has_users_conferences1_idx` (`conference_id` ASC)  COMMENT '',
  CONSTRAINT `fk_conferences_has_users_conferences1`
    FOREIGN KEY (`conference_id`)
    REFERENCES `conference_scheduler`.`conferences` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_conferences_has_users_users1`
    FOREIGN KEY (`user_id`)
    REFERENCES `conference_scheduler`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `conference_scheduler`.`venues_has_owners`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `conference_scheduler`.`venues_has_owners` ;

CREATE TABLE IF NOT EXISTS `conference_scheduler`.`venues_has_owners` (
  `venue_id` INT NOT NULL COMMENT '',
  `owner_id` INT NOT NULL COMMENT '',
  PRIMARY KEY (`venue_id`, `owner_id`)  COMMENT '',
  INDEX `fk_venues_has_users_users1_idx` (`owner_id` ASC)  COMMENT '',
  INDEX `fk_venues_has_users_venues1_idx` (`venue_id` ASC)  COMMENT '',
  CONSTRAINT `fk_venues_has_users_venues1`
    FOREIGN KEY (`venue_id`)
    REFERENCES `conference_scheduler`.`venues` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_venues_has_users_users1`
    FOREIGN KEY (`owner_id`)
    REFERENCES `conference_scheduler`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `conference_scheduler`.`lectures`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `conference_scheduler`.`lectures` ;

CREATE TABLE IF NOT EXISTS `conference_scheduler`.`lectures` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `hall_id` INT NOT NULL COMMENT '',
  `start_time` DATETIME NOT NULL COMMENT '',
  `end_time` DATETIME NOT NULL COMMENT '',
  `price` DECIMAL(15,2) NOT NULL DEFAULT 0 COMMENT '',
  `active` TINYINT(1) NOT NULL DEFAULT 1 COMMENT '',
  `group_id` INT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `fk_lectures_halls1_idx` (`hall_id` ASC)  COMMENT '',
  INDEX `fk_lectures_groups1_idx` (`group_id` ASC)  COMMENT '',
  CONSTRAINT `fk_lectures_halls1`
    FOREIGN KEY (`hall_id`)
    REFERENCES `conference_scheduler`.`halls` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_lectures_groups1`
    FOREIGN KEY (`group_id`)
    REFERENCES `conference_scheduler`.`groups` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `conference_scheduler`.`breaks`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `conference_scheduler`.`breaks` ;

CREATE TABLE IF NOT EXISTS `conference_scheduler`.`breaks` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `hall_id` INT NOT NULL COMMENT '',
  `start_time` DATETIME NOT NULL COMMENT '',
  `end_time` DATETIME NOT NULL COMMENT '',
  `before_lecture_id` INT NOT NULL COMMENT '',
  `after_lecture_id` INT NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `fk_breaks_halls1_idx` (`hall_id` ASC)  COMMENT '',
  INDEX `fk_breaks_lectures1_idx` (`before_lecture_id` ASC)  COMMENT '',
  INDEX `fk_breaks_lectures2_idx` (`after_lecture_id` ASC)  COMMENT '',
  CONSTRAINT `fk_breaks_halls1`
    FOREIGN KEY (`hall_id`)
    REFERENCES `conference_scheduler`.`halls` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_breaks_lectures1`
    FOREIGN KEY (`before_lecture_id`)
    REFERENCES `conference_scheduler`.`lectures` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_breaks_lectures2`
    FOREIGN KEY (`after_lecture_id`)
    REFERENCES `conference_scheduler`.`lectures` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `conference_scheduler`.`lectures_has_lecturers`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `conference_scheduler`.`lectures_has_lecturers` ;

CREATE TABLE IF NOT EXISTS `conference_scheduler`.`lectures_has_lecturers` (
  `lecture_id` INT NOT NULL COMMENT '',
  `user_id` INT NOT NULL COMMENT '',
  PRIMARY KEY (`lecture_id`, `user_id`)  COMMENT '',
  INDEX `fk_lectures_has_users_users1_idx` (`user_id` ASC)  COMMENT '',
  INDEX `fk_lectures_has_users_lectures1_idx` (`lecture_id` ASC)  COMMENT '',
  CONSTRAINT `fk_lectures_has_users_lectures1`
    FOREIGN KEY (`lecture_id`)
    REFERENCES `conference_scheduler`.`lectures` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_lectures_has_users_users1`
    FOREIGN KEY (`user_id`)
    REFERENCES `conference_scheduler`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `conference_scheduler`.`lectures_has_organizers`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `conference_scheduler`.`lectures_has_organizers` ;

CREATE TABLE IF NOT EXISTS `conference_scheduler`.`lectures_has_organizers` (
  `lecture_id` INT NOT NULL COMMENT '',
  `user_id` INT NOT NULL COMMENT '',
  PRIMARY KEY (`lecture_id`, `user_id`)  COMMENT '',
  INDEX `fk_lectures_has_users_users2_idx` (`user_id` ASC)  COMMENT '',
  INDEX `fk_lectures_has_users_lectures2_idx` (`lecture_id` ASC)  COMMENT '',
  CONSTRAINT `fk_lectures_has_users_lectures2`
    FOREIGN KEY (`lecture_id`)
    REFERENCES `conference_scheduler`.`lectures` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_lectures_has_users_users2`
    FOREIGN KEY (`user_id`)
    REFERENCES `conference_scheduler`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `conference_scheduler`.`lectures_has_attendees`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `conference_scheduler`.`lectures_has_attendees` ;

CREATE TABLE IF NOT EXISTS `conference_scheduler`.`lectures_has_attendees` (
  `lecture_id` INT NOT NULL COMMENT '',
  `user_id` INT NOT NULL COMMENT '',
  PRIMARY KEY (`lecture_id`, `user_id`)  COMMENT '',
  INDEX `fk_lectures_has_users_users3_idx` (`user_id` ASC)  COMMENT '',
  INDEX `fk_lectures_has_users_lectures3_idx` (`lecture_id` ASC)  COMMENT '',
  CONSTRAINT `fk_lectures_has_users_lectures3`
    FOREIGN KEY (`lecture_id`)
    REFERENCES `conference_scheduler`.`lectures` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_lectures_has_users_users3`
    FOREIGN KEY (`user_id`)
    REFERENCES `conference_scheduler`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `conference_scheduler`.`schedules`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `conference_scheduler`.`schedules` ;

CREATE TABLE IF NOT EXISTS `conference_scheduler`.`schedules` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `Date` DATETIME NOT NULL COMMENT '',
  `user_id` INT NOT NULL COMMENT '',
  PRIMARY KEY (`id`, `user_id`)  COMMENT '',
  INDEX `fk_schedules_users1_idx` (`user_id` ASC)  COMMENT '',
  CONSTRAINT `fk_schedules_users1`
    FOREIGN KEY (`user_id`)
    REFERENCES `conference_scheduler`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `conference_scheduler`.`schedules_has_lectures`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `conference_scheduler`.`schedules_has_lectures` ;

CREATE TABLE IF NOT EXISTS `conference_scheduler`.`schedules_has_lectures` (
  `schedule_id` INT NOT NULL COMMENT '',
  `lecture_id` INT NOT NULL COMMENT '',
  `must_visit` TINYINT(1) NOT NULL DEFAULT 0 COMMENT '',
  PRIMARY KEY (`schedule_id`, `lecture_id`)  COMMENT '',
  INDEX `fk_schedule_has_lectures_lectures1_idx` (`lecture_id` ASC)  COMMENT '',
  INDEX `fk_schedule_has_lectures_schedule1_idx` (`schedule_id` ASC)  COMMENT '',
  CONSTRAINT `fk_schedule_has_lectures_schedule1`
    FOREIGN KEY (`schedule_id`)
    REFERENCES `conference_scheduler`.`schedules` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_schedule_has_lectures_lectures1`
    FOREIGN KEY (`lecture_id`)
    REFERENCES `conference_scheduler`.`lectures` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `conference_scheduler`.`notification_types`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `conference_scheduler`.`notification_types` ;

CREATE TABLE IF NOT EXISTS `conference_scheduler`.`notification_types` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `name` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `conference_scheduler`.`notifications`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `conference_scheduler`.`notifications` ;

CREATE TABLE IF NOT EXISTS `conference_scheduler`.`notifications` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `send_on` DATETIME NOT NULL COMMENT '',
  `read` TINYINT(1) NOT NULL DEFAULT 0 COMMENT '',
  `accepted` TINYINT(1) NOT NULL DEFAULT 0 COMMENT '',
  `text` VARCHAR(245) NOT NULL COMMENT '',
  `valid_to` DATETIME NOT NULL COMMENT '',
  `notification_type_id` INT NOT NULL COMMENT '',
  `recipient_id` INT NOT NULL COMMENT '',
  `sender_id` INT NOT NULL COMMENT '',
  `lecture_id` INT NULL COMMENT '',
  `conference_id` INT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `fk_notifications_notification_types1_idx` (`notification_type_id` ASC)  COMMENT '',
  INDEX `fk_notifications_users1_idx` (`recipient_id` ASC)  COMMENT '',
  INDEX `fk_notifications_users2_idx` (`sender_id` ASC)  COMMENT '',
  INDEX `fk_notifications_lectures1_idx` (`lecture_id` ASC)  COMMENT '',
  INDEX `fk_notifications_conferences1_idx` (`conference_id` ASC)  COMMENT '',
  CONSTRAINT `fk_notifications_notification_types1`
    FOREIGN KEY (`notification_type_id`)
    REFERENCES `conference_scheduler`.`notification_types` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_notifications_users1`
    FOREIGN KEY (`recipient_id`)
    REFERENCES `conference_scheduler`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_notifications_users2`
    FOREIGN KEY (`sender_id`)
    REFERENCES `conference_scheduler`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_notifications_lectures1`
    FOREIGN KEY (`lecture_id`)
    REFERENCES `conference_scheduler`.`lectures` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_notifications_conferences1`
    FOREIGN KEY (`conference_id`)
    REFERENCES `conference_scheduler`.`conferences` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `conference_scheduler`.`free_passes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `conference_scheduler`.`free_passes` ;

CREATE TABLE IF NOT EXISTS `conference_scheduler`.`free_passes` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `limit` INT NOT NULL COMMENT '',
  `group_id` INT NULL COMMENT '',
  `conference_id` INT NULL COMMENT '',
  `open` TINYINT(1) NOT NULL DEFAULT 1 COMMENT '',
  `lecture_id` INT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `fk_free_passes_groups1_idx` (`group_id` ASC)  COMMENT '',
  INDEX `fk_free_passes_conferences1_idx` (`conference_id` ASC)  COMMENT '',
  INDEX `fk_free_passes_lectures1_idx` (`lecture_id` ASC)  COMMENT '',
  CONSTRAINT `fk_free_passes_groups1`
    FOREIGN KEY (`group_id`)
    REFERENCES `conference_scheduler`.`groups` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_free_passes_conferences1`
    FOREIGN KEY (`conference_id`)
    REFERENCES `conference_scheduler`.`conferences` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_free_passes_lectures1`
    FOREIGN KEY (`lecture_id`)
    REFERENCES `conference_scheduler`.`lectures` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
 
 -- Seed
 
 INSERT INTO `genders` (`type`) VALUES ('default'), ('female'), ('male'), ('other')
 
 INSERT INTO `roles` (`role`) VALUES ('user'), ('site_administrator'), ('conference_owner'), ('conference_administrator')
 
 INSERT INTO `notification_types` (`name`) 
 VALUES ('Free pass granted.'), ('Free pass available.'), ('Lecture cenceled.'), 
 ('Conference cenceled.'), ('Invitation to lecture.'), ('Invitation to conference.')